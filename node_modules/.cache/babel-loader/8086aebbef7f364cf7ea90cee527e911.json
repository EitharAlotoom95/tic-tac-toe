{"ast":null,"code":"// import React, { Component } from 'react'\n// import Square from './Square';\n// export default class Game extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//           squares: Array(9).fill(null),\n//           xIsNext: true,\n//         }\n//         }\n//         handleClick(i) {\n//             const squares = this.state.squares.slice();\n//             if (squares[i] !== null)\n//             return;\n//             squares[i] =this.state.xIsNext ? 'X' : 'O';\n//             this.setState({\n//                 squares: squares,\n//                 xIsNext: !this.state.xIsNext,\n//             });\n//           }\n//           renderSquare(i) {\n//             return (\n//               <Square\n//                 value={this.state.squares[i]}\n//                 onClick={() => this.handleClick(i)}\n//               />\n//             );\n//           }\n//           render() {\n//             const winner = calculateWinner(this.state.squares);\n//             let status;\n//             if (winner) {\n//               status = 'congrats  ' + winner + '  you are the winner  ';\n//               //  if(winner){\n//               //   status = this.state.squares === null ;\n//               // }\n//             } else {\n//               status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n//             }\n//             return (\n//               <div>\n//                 <div className=\"status\">{status}</div>\n//                 <div className=\"board-row\">\n//                   {this.renderSquare(0)}\n//                   {this.renderSquare(1)}\n//                   {this.renderSquare(2)}\n//                 </div>\n//                 <div className=\"board-row\">\n//                   {this.renderSquare(3)}\n//                   {this.renderSquare(4)}\n//                   {this.renderSquare(5)}\n//                 </div>\n//                 <div className=\"board-row\">\n//                   {this.renderSquare(6)}\n//                   {this.renderSquare(7)}\n//                   {this.renderSquare(8)}\n//                 </div>\n//               </div>\n//             );\n//           }\n//         }\n//         function calculateWinner(squares) {\n//             const lines = [\n//               [0, 1, 2],\n//               [3, 4, 5],\n//               [6, 7, 8],\n//               [0, 3, 6],\n//               [1, 4, 7],\n//               [2, 5, 8],\n//               [0, 4, 8],\n//               [2, 4, 6],\n//             ];\n//             for (let i = 0; i < lines.length; i++) {\n//               const [a, b, c] = lines[i];\n//               if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//                 return squares[a];\n//               }\n//             }\n//             return null; \n//           }\n//////////////////////////////////////////////////////////////////","map":{"version":3,"sources":["C:/Users/Eythar/Desktop/tic tac toe/react-app/src/components/Game.js"],"names":[],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["// import React, { Component } from 'react'\r\n\r\n// import Square from './Square';\r\n\r\n// export default class Game extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//           squares: Array(9).fill(null),\r\n//           xIsNext: true,\r\n//         }\r\n//         }\r\n//         handleClick(i) {\r\n//             const squares = this.state.squares.slice();\r\n//             if (squares[i] !== null)\r\n//             return;\r\n            \r\n            \r\n             \r\n//             squares[i] =this.state.xIsNext ? 'X' : 'O';\r\n//             this.setState({\r\n//                 squares: squares,\r\n//                 xIsNext: !this.state.xIsNext,\r\n//             });\r\n//           }\r\n//           renderSquare(i) {\r\n//             return (\r\n//               <Square\r\n//                 value={this.state.squares[i]}\r\n//                 onClick={() => this.handleClick(i)}\r\n//               />\r\n//             );\r\n//           }\r\n//           render() {\r\n//             const winner = calculateWinner(this.state.squares);\r\n//             let status;\r\n//             if (winner) {\r\n//               status = 'congrats  ' + winner + '  you are the winner  ';\r\n//               //  if(winner){\r\n//               //   status = this.state.squares === null ;\r\n//               // }\r\n              \r\n//             } else {\r\n//               status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n//             }\r\n            \r\n            \r\n//             return (\r\n//               <div>\r\n//                 <div className=\"status\">{status}</div>\r\n//                 <div className=\"board-row\">\r\n//                   {this.renderSquare(0)}\r\n//                   {this.renderSquare(1)}\r\n//                   {this.renderSquare(2)}\r\n//                 </div>\r\n//                 <div className=\"board-row\">\r\n//                   {this.renderSquare(3)}\r\n//                   {this.renderSquare(4)}\r\n//                   {this.renderSquare(5)}\r\n//                 </div>\r\n//                 <div className=\"board-row\">\r\n//                   {this.renderSquare(6)}\r\n//                   {this.renderSquare(7)}\r\n//                   {this.renderSquare(8)}\r\n//                 </div>\r\n//               </div>\r\n//             );\r\n//           }\r\n//         }\r\n\r\n\r\n//         function calculateWinner(squares) {\r\n//             const lines = [\r\n//               [0, 1, 2],\r\n//               [3, 4, 5],\r\n//               [6, 7, 8],\r\n//               [0, 3, 6],\r\n//               [1, 4, 7],\r\n//               [2, 5, 8],\r\n//               [0, 4, 8],\r\n//               [2, 4, 6],\r\n//             ];\r\n//             for (let i = 0; i < lines.length; i++) {\r\n//               const [a, b, c] = lines[i];\r\n//               if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n//                 return squares[a];\r\n//               }\r\n//             }\r\n//             return null; \r\n//           }\r\n\r\n\r\n//////////////////////////////////////////////////////////////////\r\n"]},"metadata":{},"sourceType":"module"}