{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Eythar\\\\Desktop\\\\tic tac toe\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Eythar\\\\Desktop\\\\tic tac toe\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Eythar\\\\Desktop\\\\tic tac toe\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Eythar\\\\Desktop\\\\tic tac toe\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Eythar\\\\Desktop\\\\tic tac toe\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Eythar\\\\Desktop\\\\tic tac toe\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eythar\\\\Desktop\\\\tic tac toe\\\\react-app\\\\src\\\\components\\\\Game.js\";\n// import React, { Component } from 'react'\n// import Square from './Square';\n// export default class Game extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//           squares: Array(9).fill(null),\n//           xIsNext: true,\n//         }\n//         }\n//         handleClick(i) {\n//             const squares = this.state.squares.slice();\n//             if (squares[i] !== null)\n//             return;\n//             squares[i] =this.state.xIsNext ? 'X' : 'O';\n//             this.setState({\n//                 squares: squares,\n//                 xIsNext: !this.state.xIsNext,\n//             });\n//           }\n//           renderSquare(i) {\n//             return (\n//               <Square\n//                 value={this.state.squares[i]}\n//                 onClick={() => this.handleClick(i)}\n//               />\n//             );\n//           }\n//           render() {\n//             const winner = calculateWinner(this.state.squares);\n//             let status;\n//             if (winner) {\n//               status = 'congrats  ' + winner + '  you are the winner  ';\n//               //  if(winner){\n//               //   status = this.state.squares === null ;\n//               // }\n//             } else {\n//               status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n//             }\n//             return (\n//               <div>\n//                 <div className=\"status\">{status}</div>\n//                 <div className=\"board-row\">\n//                   {this.renderSquare(0)}\n//                   {this.renderSquare(1)}\n//                   {this.renderSquare(2)}\n//                 </div>\n//                 <div className=\"board-row\">\n//                   {this.renderSquare(3)}\n//                   {this.renderSquare(4)}\n//                   {this.renderSquare(5)}\n//                 </div>\n//                 <div className=\"board-row\">\n//                   {this.renderSquare(6)}\n//                   {this.renderSquare(7)}\n//                   {this.renderSquare(8)}\n//                 </div>\n//               </div>\n//             );\n//           }\n//         }\n//         function calculateWinner(squares) {\n//             const lines = [\n//               [0, 1, 2],\n//               [3, 4, 5],\n//               [6, 7, 8],\n//               [0, 3, 6],\n//               [1, 4, 7],\n//               [2, 5, 8],\n//               [0, 4, 8],\n//               [2, 4, 6],\n//             ];\n//             for (let i = 0; i < lines.length; i++) {\n//               const [a, b, c] = lines[i];\n//               if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//                 return squares[a];\n//               }\n//             }\n//             return null; \n//           }\n//////////////////////////////////////////////////////////////////\nimport React, { Component } from 'react';\nimport Board from './Board';\n\nvar Game = /*#__PURE__*/function (_rComponent) {\n  _inherits(Game, _rComponent);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      xIsNext: true,\n      stepNumber: 0,\n      history: [{\n        squares: Array(9).fill(null)\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"jumpTo\",\n    value: function jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var history = this.state.history.slice(0, this.state.stepNumber + 1);\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n      var winner = calculateWinner(squares);\n\n      if (winner || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat({\n          squares: squares\n        }),\n        xIsNext: !this.state.xIsNext,\n        stepNumber: history.length\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var history = this.state.history;\n      var current = history[this.state.stepNumber];\n      var winner = calculateWinner(current.squares);\n      var moves = history.map(function (step, move) {\n        var desc = move ? 'Go to #' + move : 'Start the Game';\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: move,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: function onClick() {\n            _this2.jumpTo(move);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }\n        }, desc));\n      });\n      var status;\n\n      if (winner) {\n        status = 'Winner is ' + winner;\n      } else {\n        status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"game\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"game-board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Board, {\n        onClick: function onClick(i) {\n          return _this2.handleClick(i);\n        },\n        squares: current.squares,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"game-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, status), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }, moves)));\n    }\n  }]);\n\n  return Game;\n}(rComponent);\n\nexport { Game as default };\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/Eythar/Desktop/tic tac toe/react-app/src/components/Game.js"],"names":["React","Component","Board","Game","props","state","xIsNext","stepNumber","history","squares","Array","fill","step","setState","i","slice","current","length","winner","calculateWinner","concat","moves","map","move","desc","jumpTo","status","handleClick","rComponent","lines","a","b","c"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react'\r\n\r\n// import Square from './Square';\r\n\r\n// export default class Game extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//           squares: Array(9).fill(null),\r\n//           xIsNext: true,\r\n//         }\r\n//         }\r\n//         handleClick(i) {\r\n//             const squares = this.state.squares.slice();\r\n//             if (squares[i] !== null)\r\n//             return;\r\n            \r\n            \r\n             \r\n//             squares[i] =this.state.xIsNext ? 'X' : 'O';\r\n//             this.setState({\r\n//                 squares: squares,\r\n//                 xIsNext: !this.state.xIsNext,\r\n//             });\r\n//           }\r\n//           renderSquare(i) {\r\n//             return (\r\n//               <Square\r\n//                 value={this.state.squares[i]}\r\n//                 onClick={() => this.handleClick(i)}\r\n//               />\r\n//             );\r\n//           }\r\n//           render() {\r\n//             const winner = calculateWinner(this.state.squares);\r\n//             let status;\r\n//             if (winner) {\r\n//               status = 'congrats  ' + winner + '  you are the winner  ';\r\n//               //  if(winner){\r\n//               //   status = this.state.squares === null ;\r\n//               // }\r\n              \r\n//             } else {\r\n//               status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n//             }\r\n            \r\n            \r\n//             return (\r\n//               <div>\r\n//                 <div className=\"status\">{status}</div>\r\n//                 <div className=\"board-row\">\r\n//                   {this.renderSquare(0)}\r\n//                   {this.renderSquare(1)}\r\n//                   {this.renderSquare(2)}\r\n//                 </div>\r\n//                 <div className=\"board-row\">\r\n//                   {this.renderSquare(3)}\r\n//                   {this.renderSquare(4)}\r\n//                   {this.renderSquare(5)}\r\n//                 </div>\r\n//                 <div className=\"board-row\">\r\n//                   {this.renderSquare(6)}\r\n//                   {this.renderSquare(7)}\r\n//                   {this.renderSquare(8)}\r\n//                 </div>\r\n//               </div>\r\n//             );\r\n//           }\r\n//         }\r\n\r\n\r\n//         function calculateWinner(squares) {\r\n//             const lines = [\r\n//               [0, 1, 2],\r\n//               [3, 4, 5],\r\n//               [6, 7, 8],\r\n//               [0, 3, 6],\r\n//               [1, 4, 7],\r\n//               [2, 5, 8],\r\n//               [0, 4, 8],\r\n//               [2, 4, 6],\r\n//             ];\r\n//             for (let i = 0; i < lines.length; i++) {\r\n//               const [a, b, c] = lines[i];\r\n//               if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n//                 return squares[a];\r\n//               }\r\n//             }\r\n//             return null; \r\n//           }\r\n\r\n\r\n//////////////////////////////////////////////////////////////////\r\nimport React, { Component } from 'react'\r\nimport Board from './Board';\r\n\r\nexport default class Game extends rComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n            history: [\r\n                { squares: Array(9).fill(null) }\r\n            ]\r\n        }\r\n    }\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step%2)===0\r\n        })\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        if (winner || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat({\r\n                squares: squares\r\n            }),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go to #' + move : 'Start the Game';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => { this.jumpTo(move) }}>\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            )\r\n        });\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner is ' + winner;\r\n        } else {\r\n            status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board onClick={(i) => this.handleClick(i)}\r\n                        squares={current.squares} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ul>{moves}</ul>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}