{"map":"{\"version\":3,\"sources\":[\"C:/Users/Eythar/Desktop/tic tac toe/react-app/src/components/Square.js\",\"C:/Users/Eythar/Desktop/tic tac toe/react-app/src/components/Game.js\",\"C:/Users/Eythar/Desktop/tic tac toe/react-app/src/App.js\",\"C:/Users/Eythar/Desktop/tic tac toe/react-app/src/serviceWorker.js\",\"C:/Users/Eythar/Desktop/tic tac toe/react-app/src/index.js\"],\"names\":[\"Square\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"value\",\"Game\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"squares\",\"Array\",\"fill\",\"xIsNext\",\"i\",\"slice\",\"setState\",\"_this2\",\"handleClick\",\"status\",\"winner\",\"lines\",\"length\",\"_lines$i\",\"slicedToArray\",\"b\",\"c\",\"calculateWinner\",\"renderSquare\",\"Component\",\"App\",\"Game_Game\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"StrictMode\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"catch\",\"error\",\"console\",\"message\"],\"mappings\":\"gOAEe,SAASA,EAAQC,GAE1B,OACEC,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,SAASC,QAAUL,EAAMK,SACxCL,EAAMM,WCFIC,cACjB,SAAAA,EAAYP,GAAO,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMX,KACDe,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJIX,2EAOHY,GAER,IAAMJ,EAAUL,KAAKI,MAAMC,QAAQK,QAChB,OAAfL,EAAQI,KAKZJ,EAAQI,GAAGT,KAAKI,MAAMI,QAAU,IAAM,IACtCR,KAAKW,SAAS,CACVN,QAASA,EACTG,SAAUR,KAAKI,MAAMI,gDAGdC,GAAG,IAAAG,EAAAZ,KACd,OACEV,EAAAC,EAAAC,cAACJ,EAAD,CACEO,MAAOK,KAAKI,MAAMC,QAAQI,GAC1Bf,QAAS,WAAA,OAAMkB,EAAKC,YAAYJ,uCAKpC,IACIK,EADEC,EA0CV,SAAyBV,GAWrB,IAVA,IAAMW,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAP,EAAI,EAAGA,EAAIO,EAAMC,OAAQR,IAAK,CAAA,IAAAS,EAAApB,OAAAqB,EAAA,EAAArB,CACnBkB,EAAMP,GADa,GAC9BlB,EAD8B2B,EAAA,GAC3BE,EAD2BF,EAAA,GACxBG,EADwBH,EAAA,GAErC,GAAIb,EAAQd,IAAMc,EAAQd,KAAOc,EAAQe,IAAMf,EAAQd,KAAOc,EAAQgB,GACpE,OAAOhB,EAAQd,GAGnB,OAAO,KA3DQ+B,CAAgBtB,KAAKI,MAAMC,SAkB1C,OAbIU,GACFD,EAAS,aAAeC,EAAS,yBACzBf,KAAKI,MAAQ,CACnBC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,IAKXM,EAAS,iBAAmBd,KAAKI,MAAMI,QAAU,IAAM,KAKvDlB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UAAUqB,GACzBxB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACZO,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,IAErBjC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACZO,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,IAErBjC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACZO,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,YAjEHC,EAAAA,iBCMnBC,IAAAA,EANf,WACE,OACEnC,EAAAC,EAAAC,cAACkC,EAAD,OCMgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OACP3C,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,WAAP,KACE5C,EAAAC,EAAAC,cAAC2C,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME\",\"sourcesContent\":[\"import React from 'react';\\r\\n\\r\\nexport default function Square (props) {\\r\\n    \\r\\n      return (\\r\\n        <button className=\\\"square\\\" onClick ={props.onClick}>\\r\\n          {props.value}\\r\\n        </button>\\r\\n      );\\r\\n    \\r\\n  }\\r\\n\\r\\n\",\"import React, { Component } from 'react'\\r\\n\\r\\nimport Square from './Square';\\r\\n\\r\\nexport default class Game extends Component {\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n          squares: Array(9).fill(null),\\r\\n          xIsNext: true,\\r\\n        }\\r\\n        }\\r\\n        handleClick(i) {\\r\\n          \\r\\n            const squares = this.state.squares.slice();\\r\\n            if (squares[i] !== null)\\r\\n            return;\\r\\n            \\r\\n            \\r\\n             \\r\\n            squares[i]=this.state.xIsNext ? 'X' : 'O';\\r\\n            this.setState({\\r\\n                squares: squares,\\r\\n                xIsNext: !this.state.xIsNext,\\r\\n            });\\r\\n          }\\r\\n          renderSquare(i) {\\r\\n            return (\\r\\n              <Square\\r\\n                value={this.state.squares[i]}\\r\\n                onClick={() => this.handleClick(i)}\\r\\n              />\\r\\n            );\\r\\n          }\\r\\n          render() {\\r\\n            const winner = calculateWinner(this.state.squares);\\r\\n            let status;\\r\\n            let reset;\\r\\n            \\r\\n           \\r\\n            if (winner) {\\r\\n              status = 'congrats  ' + winner + '  you are the winner  ' ;\\r\\n              reset = this.state = {\\r\\n                squares: Array(9).fill(null),\\r\\n                xIsNext: true,\\r\\n              }\\r\\n              \\r\\n            } else {\\r\\n          \\r\\n              status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\\r\\n            }\\r\\n            \\r\\n            \\r\\n            return (\\r\\n              <div className=\\\"centre\\\">\\r\\n                <div className=\\\"status\\\">{status}</div>\\r\\n                <div className=\\\"board-row\\\">\\r\\n                  {this.renderSquare(0)}\\r\\n                  {this.renderSquare(1)}\\r\\n                  {this.renderSquare(2)}\\r\\n                </div>\\r\\n                <div className=\\\"board-row\\\">\\r\\n                  {this.renderSquare(3)}\\r\\n                  {this.renderSquare(4)}\\r\\n                  {this.renderSquare(5)}\\r\\n                </div>\\r\\n                <div className=\\\"board-row\\\">\\r\\n                  {this.renderSquare(6)}\\r\\n                  {this.renderSquare(7)}\\r\\n                  {this.renderSquare(8)}\\r\\n                </div>\\r\\n              </div>\\r\\n            );\\r\\n          }\\r\\n        }\\r\\n\\r\\n\\r\\n        function calculateWinner(squares) {\\r\\n            const lines = [\\r\\n              [0, 1, 2],\\r\\n              [3, 4, 5],\\r\\n              [6, 7, 8],\\r\\n              [0, 3, 6],\\r\\n              [1, 4, 7],\\r\\n              [2, 5, 8],\\r\\n              [0, 4, 8],\\r\\n              [2, 4, 6],\\r\\n            ];\\r\\n            for (let i = 0; i < lines.length; i++) {\\r\\n              const [a, b, c] = lines[i];\\r\\n              if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\\r\\n                return squares[a];\\r\\n              }\\r\\n            }\\r\\n            return null; \\r\\n          }\\r\\n\\r\\n          \\r\\n\",\"import React from 'react';\\nimport Game from './components/Game';\\nimport './App.css';\\n\\nfunction App() {\\n  return (\\n    <Game />\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.0/8 are considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl, {\\n    headers: { 'Service-Worker': 'script' },\\n  })\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready\\n      .then(registration => {\\n        registration.unregister();\\n      })\\n      .catch(error => {\\n        console.error(error.message);\\n      });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>,\\n  document.getElementById('root')\\n);\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,r){},15:function(e,t,r){},16:function(e,t,r){\"use strict\";r.r(t);var a=r(0),n=r.n(a),s=r(2),i=r.n(s),o=(r(14),r(6)),c=r(3),u=r(4),l=r(7),h=r(5),d=r(8);function m(e){return n.a.createElement(\"button\",{className:\"square\",onClick:e.onClick},e.value)}var v=function(e){function t(e){var r;return Object(c.a)(this,t),(r=Object(l.a)(this,Object(h.a)(t).call(this,e))).state={squares:Array(9).fill(null),xIsNext:!0},r}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"handleClick\",value:function(e){var t=this.state.squares.slice();null===t[e]&&(t[e]=this.state.xIsNext?\"X\":\"O\",this.setState({squares:t,xIsNext:!this.state.xIsNext}))}},{key:\"renderSquare\",value:function(e){var t=this;return n.a.createElement(m,{value:this.state.squares[e],onClick:function(){return t.handleClick(e)}})}},{key:\"render\",value:function(){var e,t=function(e){for(var t=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]],r=0;r<t.length;r++){var a=Object(o.a)(t[r],3),n=a[0],s=a[1],i=a[2];if(e[n]&&e[n]===e[s]&&e[n]===e[i])return e[n]}return null}(this.state.squares);return t?(e=\"congrats  \"+t+\"  you are the winner  \",this.state={squares:Array(9).fill(null),xIsNext:!0}):e=\"Next player: \"+(this.state.xIsNext?\"X\":\"O\"),n.a.createElement(\"div\",{className:\"centre\"},n.a.createElement(\"div\",{className:\"status\"},e),n.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(0),this.renderSquare(1),this.renderSquare(2)),n.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(3),this.renderSquare(4),this.renderSquare(5)),n.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(6),this.renderSquare(7),this.renderSquare(8)))}}]),t}(a.Component);r(15);var f=function(){return n.a.createElement(v,null)};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(f,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()}).catch(function(e){console.error(e.message)})},9:function(e,t,r){e.exports=r(16)}},[[9,1,2]]]);","extractedComments":[]}